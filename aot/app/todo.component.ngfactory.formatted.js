/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */
import { styles } from './todo.component.scss.shim.ngstyle'
import {
	anchorDef,
	createComponentFactory,
	createRendererType2,
	directiveDef,
	elementDef,
	nodeValue,
	providerDef,
	pureArrayDef,
	pureObjectDef,
	textDef,
	viewDef,
} from '@angular/core/src/view'
import {
	ElementRef,
	IterableDiffers,
	KeyValueDiffers,
	Renderer2,
	TemplateRef,
	ViewContainerRef,
} from '@angular/core'
import {
	COMPOSITION_BUFFER_MODE,
	DefaultValueAccessor,
	NG_VALUE_ACCESSOR,
	NgControl,
	NgControlStatus,
	NgModel,
} from '@angular/forms'
import { AutofocusDirective } from 'angular-autofocus-fix'
import { LocationStrategy, NgClass, NgForOf, NgIf } from '@angular/common'
import { ActivatedRoute, Router, RouterLinkWithHref } from '@angular/router'
import { TodoComponent } from './todo.component'
import { TodoService } from './todo.service'
const styles_TodoComponent = [styles]

const RenderType_TodoComponent = createRendererType2({
	encapsulation: 0,
	styles: styles_TodoComponent,
	data: {},
})
export { RenderType_TodoComponent }
function View_TodoComponent_3(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				1,
				'label',
				[],
				null,
				[[null, 'dblclick']],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('dblclick' === en) {
						const pd_0 =
							_co.edit(_v.parent.context.$implicit) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			(_l()(), textDef(1, null, ['', ''])),
		],
		null,
		function (_ck, _v) {
			const currVal_0 = _v.parent.context.$implicit.title
			_ck(_v, 1, 0, currVal_0)
		}
	)
}
function View_TodoComponent_4(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				6,
				'input',
				[
					['autofocus', ''],
					['class', 'edit'],
				],
				[
					[2, 'ng-untouched', null],
					[2, 'ng-touched', null],
					[2, 'ng-pristine', null],
					[2, 'ng-dirty', null],
					[2, 'ng-valid', null],
					[2, 'ng-invalid', null],
					[2, 'ng-pending', null],
				],
				[
					[null, 'ngModelChange'],
					[null, 'keyup.enter'],
					[null, 'keyup.esc'],
					[null, 'input'],
					[null, 'blur'],
					[null, 'compositionstart'],
					[null, 'compositionend'],
				],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('input' === en) {
						const pd_0 =
							nodeValue(_v, 1)._handleInput(
								$event.target.value
							) !== false
						ad = pd_0 && ad
					}
					if ('blur' === en) {
						const pd_1 = nodeValue(_v, 1).onTouched() !== false
						ad = pd_1 && ad
					}
					if ('compositionstart' === en) {
						const pd_2 =
							nodeValue(_v, 1)._compositionStart() !== false
						ad = pd_2 && ad
					}
					if ('compositionend' === en) {
						const pd_3 =
							nodeValue(_v, 1)._compositionEnd(
								$event.target.value
							) !== false
						ad = pd_3 && ad
					}
					if ('ngModelChange' === en) {
						const pd_4 = (_co.currentTodo.title = $event) !== false
						ad = pd_4 && ad
					}
					if ('keyup.enter' === en) {
						const pd_5 = _co.update(_co.currentTodo) !== false
						ad = pd_5 && ad
					}
					if ('keyup.esc' === en) {
						const pd_6 = _co.cancelEdit() !== false
						ad = pd_6 && ad
					}
					return ad
				},
				null,
				null
			)),
			directiveDef(
				1,
				16384,
				null,
				0,
				DefaultValueAccessor,
				[Renderer2, ElementRef, [2, COMPOSITION_BUFFER_MODE]],
				null,
				null
			),
			providerDef(
				1024,
				null,
				NG_VALUE_ACCESSOR,
				function (p0_0) {
					return [p0_0]
				},
				[DefaultValueAccessor]
			),
			directiveDef(
				3,
				671744,
				null,
				0,
				NgModel,
				[
					[8, null],
					[8, null],
					[8, null],
					[6, NG_VALUE_ACCESSOR],
				],
				{ model: [0, 'model'] },
				{ update: 'ngModelChange' }
			),
			providerDef(2048, null, NgControl, null, [NgModel]),
			directiveDef(
				5,
				16384,
				null,
				0,
				NgControlStatus,
				[[4, NgControl]],
				null,
				null
			),
			directiveDef(
				6,
				4210688,
				null,
				0,
				AutofocusDirective,
				[ElementRef],
				{ autofocus: [0, 'autofocus'] },
				null
			),
		],
		function (_ck, _v) {
			const _co = _v.component
			const currVal_7 = _co.currentTodo.title
			_ck(_v, 3, 0, currVal_7)
			const currVal_8 = ''
			_ck(_v, 6, 0, currVal_8)
		},
		function (_ck, _v) {
			const currVal_0 = nodeValue(_v, 5).ngClassUntouched
			const currVal_1 = nodeValue(_v, 5).ngClassTouched
			const currVal_2 = nodeValue(_v, 5).ngClassPristine
			const currVal_3 = nodeValue(_v, 5).ngClassDirty
			const currVal_4 = nodeValue(_v, 5).ngClassValid
			const currVal_5 = nodeValue(_v, 5).ngClassInvalid
			const currVal_6 = nodeValue(_v, 5).ngClassPending
			_ck(
				_v,
				0,
				0,
				currVal_0,
				currVal_1,
				currVal_2,
				currVal_3,
				currVal_4,
				currVal_5,
				currVal_6
			)
		}
	)
}
function View_TodoComponent_2(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				16,
				'li',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			directiveDef(
				1,
				278528,
				null,
				0,
				NgClass,
				[IterableDiffers, KeyValueDiffers, ElementRef, Renderer2],
				{ ngClass: [0, 'ngClass'] },
				null
			),
			pureObjectDef(2, { completed: 0, editing: 1 }),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(),
			elementDef(
				4,
				0,
				null,
				null,
				8,
				'div',
				[['class', 'view']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t\t'])),
			(_l()(),
			elementDef(
				6,
				0,
				null,
				null,
				0,
				'input',
				[
					['class', 'toggle'],
					['type', 'checkbox'],
				],
				[[8, 'checked', 0]],
				[[null, 'change']],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('change' === en) {
						const pd_0 = _co.toggle(_v.context.$implicit) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_3)),
			directiveDef(
				9,
				16384,
				null,
				0,
				NgIf,
				[ViewContainerRef, TemplateRef],
				{ ngIf: [0, 'ngIf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t\t'])),
			(_l()(),
			elementDef(
				11,
				0,
				null,
				null,
				0,
				'button',
				[['class', 'destroy']],
				null,
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('click' === en) {
						const pd_0 = _co.delete(_v.context.$implicit) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_4)),
			directiveDef(
				15,
				16384,
				null,
				0,
				NgIf,
				[ViewContainerRef, TemplateRef],
				{ ngIf: [0, 'ngIf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
		],
		function (_ck, _v) {
			const _co = _v.component
			const currVal_0 = _ck(
				_v,
				2,
				0,
				_v.context.$implicit.completed,
				_v.context.$implicit == _co.currentTodo
			)
			_ck(_v, 1, 0, currVal_0)
			const currVal_2 =
				(_co.currentTodo == null ? null : _co.currentTodo.id) !=
				_v.context.$implicit.id
			_ck(_v, 9, 0, currVal_2)
			const currVal_3 = _co.currentTodo == _v.context.$implicit
			_ck(_v, 15, 0, currVal_3)
		},
		function (_ck, _v) {
			const currVal_1 = _v.context.$implicit.completed
			_ck(_v, 6, 0, currVal_1)
		}
	)
}
function View_TodoComponent_1(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				12,
				'section',
				[['class', 'main']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				2,
				0,
				[['inputToggleAll', 1]],
				null,
				0,
				'input',
				[
					['class', 'toggle-all'],
					['id', 'toggle-all'],
					['type', 'checkbox'],
				],
				[[8, 'checked', 0]],
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('click' === en) {
						const pd_0 =
							_co.toggleAll(nodeValue(_v, 2).checked) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				4,
				0,
				null,
				null,
				1,
				'label',
				[['for', 'toggle-all']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['Mark all as complete'])),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				7,
				0,
				null,
				null,
				4,
				'ul',
				[['class', 'todo-list']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_2)),
			directiveDef(
				10,
				278528,
				null,
				0,
				NgForOf,
				[
					ViewContainerRef,
					TemplateRef,
					IterableDiffers,
				],
				{ ngForOf: [0, 'ngForOf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(), textDef(-1, null, ['\n\t'])),
		],
		function (_ck, _v) {
			const _co = _v.component
			const currVal_1 = _co.filteredTodos
			_ck(_v, 10, 0, currVal_1)
		},
		function (_ck, _v) {
			const _co = _v.component
			const currVal_0 = _co.allCompleted
			_ck(_v, 2, 0, currVal_0)
		}
	)
}
function View_TodoComponent_6(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				1,
				'button',
				[['class', 'clear-completed']],
				null,
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('click' === en) {
						const pd_0 = _co.clearCompleted() !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\tClear completed\n\t\t'])),
		],
		null,
		null
	)
}
function View_TodoComponent_5(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				42,
				'footer',
				[['class', 'footer']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				2,
				0,
				null,
				null,
				3,
				'span',
				[['class', 'todo-count']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(),
			elementDef(
				3,
				0,
				null,
				null,
				1,
				'strong',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(4, null, ['', ''])),
			(_l()(), textDef(5, null, [' item', '\n\t\t\tleft'])),
			(_l()(), textDef(-1, null, ['\n\n\t\t'])),
			(_l()(),
			elementDef(
				7,
				0,
				null,
				null,
				31,
				'ul',
				[['class', 'filters']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(),
			elementDef(
				9,
				0,
				null,
				null,
				8,
				'li',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(),
			elementDef(
				11,
				0,
				null,
				null,
				5,
				'a',
				[],
				[
					[1, 'target', 0],
					[8, 'href', 4],
				],
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					if ('click' === en) {
						const pd_0 =
							nodeValue(_v, 14).onClick(
								$event.button,
								$event.ctrlKey,
								$event.metaKey,
								$event.shiftKey
							) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			directiveDef(
				12,
				278528,
				null,
				0,
				NgClass,
				[IterableDiffers, KeyValueDiffers, ElementRef, Renderer2],
				{ ngClass: [0, 'ngClass'] },
				null
			),
			pureObjectDef(13, { selected: 0 }),
			directiveDef(
				14,
				671744,
				null,
				0,
				RouterLinkWithHref,
				[Router, ActivatedRoute, LocationStrategy],
				{ routerLink: [0, 'routerLink'] },
				null
			),
			pureArrayDef(15, 1),
			(_l()(), textDef(-1, null, ['All'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(),
			elementDef(
				19,
				0,
				null,
				null,
				8,
				'li',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(),
			elementDef(
				21,
				0,
				null,
				null,
				5,
				'a',
				[],
				[
					[1, 'target', 0],
					[8, 'href', 4],
				],
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					if ('click' === en) {
						const pd_0 =
							nodeValue(_v, 24).onClick(
								$event.button,
								$event.ctrlKey,
								$event.metaKey,
								$event.shiftKey
							) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			directiveDef(
				22,
				278528,
				null,
				0,
				NgClass,
				[IterableDiffers, KeyValueDiffers, ElementRef, Renderer2],
				{ ngClass: [0, 'ngClass'] },
				null
			),
			pureObjectDef(23, { selected: 0 }),
			directiveDef(
				24,
				671744,
				null,
				0,
				RouterLinkWithHref,
				[Router, ActivatedRoute, LocationStrategy],
				{ routerLink: [0, 'routerLink'] },
				null
			),
			pureArrayDef(25, 2),
			(_l()(), textDef(-1, null, ['Active'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(),
			elementDef(
				29,
				0,
				null,
				null,
				8,
				'li',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t\t\t'])),
			(_l()(),
			elementDef(
				31,
				0,
				null,
				null,
				5,
				'a',
				[],
				[
					[1, 'target', 0],
					[8, 'href', 4],
				],
				[[null, 'click']],
				function (_v, en, $event) {
					let ad = true
					if ('click' === en) {
						const pd_0 =
							nodeValue(_v, 34).onClick(
								$event.button,
								$event.ctrlKey,
								$event.metaKey,
								$event.shiftKey
							) !== false
						ad = pd_0 && ad
					}
					return ad
				},
				null,
				null
			)),
			directiveDef(
				32,
				278528,
				null,
				0,
				NgClass,
				[IterableDiffers, KeyValueDiffers, ElementRef, Renderer2],
				{ ngClass: [0, 'ngClass'] },
				null
			),
			pureObjectDef(33, { selected: 0 }),
			directiveDef(
				34,
				671744,
				null,
				0,
				RouterLinkWithHref,
				[Router, ActivatedRoute, LocationStrategy],
				{ routerLink: [0, 'routerLink'] },
				null
			),
			pureArrayDef(35, 2),
			(_l()(), textDef(-1, null, ['Completed'])),
			(_l()(), textDef(-1, null, ['\n\t\t\t'])),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(), textDef(-1, null, ['\n\n\t\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_6)),
			directiveDef(
				41,
				16384,
				null,
				0,
				NgIf,
				[ViewContainerRef, TemplateRef],
				{ ngIf: [0, 'ngIf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t'])),
		],
		function (_ck, _v) {
			const _co = _v.component
			const currVal_4 = _ck(_v, 13, 0, _co.filter == 'SHOW_ALL')
			_ck(_v, 12, 0, currVal_4)
			const currVal_5 = _ck(_v, 15, 0, '')
			_ck(_v, 14, 0, currVal_5)
			const currVal_8 = _ck(_v, 23, 0, _co.filter == 'SHOW_ACTIVE')
			_ck(_v, 22, 0, currVal_8)
			const currVal_9 = _ck(_v, 25, 0, '', 'active')
			_ck(_v, 24, 0, currVal_9)
			const currVal_12 = _ck(_v, 33, 0, _co.filter == 'SHOW_COMPLETED')
			_ck(_v, 32, 0, currVal_12)
			const currVal_13 = _ck(_v, 35, 0, '', 'completed')
			_ck(_v, 34, 0, currVal_13)
			const currVal_14 = _co.completed > 0
			_ck(_v, 41, 0, currVal_14)
		},
		function (_ck, _v) {
			const _co = _v.component
			const currVal_0 = _co.remaining
			_ck(_v, 4, 0, currVal_0)
			const currVal_1 = _co.remaining !== 1 ? 's' : ''
			_ck(_v, 5, 0, currVal_1)
			const currVal_2 = nodeValue(_v, 14).target
			const currVal_3 = nodeValue(_v, 14).href
			_ck(_v, 11, 0, currVal_2, currVal_3)
			const currVal_6 = nodeValue(_v, 24).target
			const currVal_7 = nodeValue(_v, 24).href
			_ck(_v, 21, 0, currVal_6, currVal_7)
			const currVal_10 = nodeValue(_v, 34).target
			const currVal_11 = nodeValue(_v, 34).href
			_ck(_v, 31, 0, currVal_10, currVal_11)
		}
	)
}
export function View_TodoComponent_0(_l) {
	return viewDef(
		2,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				21,
				'section',
				[['class', 'todoapp']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(),
			elementDef(
				2,
				0,
				null,
				null,
				12,
				'header',
				[['class', 'header']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				4,
				0,
				null,
				null,
				1,
				'h1',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['todos'])),
			(_l()(), textDef(-1, null, ['\n\t\t'])),
			(_l()(),
			elementDef(
				7,
				0,
				[['todo', 1]],
				null,
				6,
				'input',
				[
					['autofocus', ''],
					['class', 'new-todo'],
					['placeholder', 'What needs to be done?'],
				],
				[
					[2, 'ng-untouched', null],
					[2, 'ng-touched', null],
					[2, 'ng-pristine', null],
					[2, 'ng-dirty', null],
					[2, 'ng-valid', null],
					[2, 'ng-invalid', null],
					[2, 'ng-pending', null],
				],
				[
					[null, 'ngModelChange'],
					[null, 'keyup.enter'],
					[null, 'input'],
					[null, 'blur'],
					[null, 'compositionstart'],
					[null, 'compositionend'],
				],
				function (_v, en, $event) {
					let ad = true
					const _co = _v.component
					if ('input' === en) {
						const pd_0 =
							nodeValue(_v, 8)._handleInput(
								$event.target.value
							) !== false
						ad = pd_0 && ad
					}
					if ('blur' === en) {
						const pd_1 = nodeValue(_v, 8).onTouched() !== false
						ad = pd_1 && ad
					}
					if ('compositionstart' === en) {
						const pd_2 =
							nodeValue(_v, 8)._compositionStart() !== false
						ad = pd_2 && ad
					}
					if ('compositionend' === en) {
						const pd_3 =
							nodeValue(_v, 8)._compositionEnd(
								$event.target.value
							) !== false
						ad = pd_3 && ad
					}
					if ('ngModelChange' === en) {
						const pd_4 = (_co.newTodo = $event) !== false
						ad = pd_4 && ad
					}
					if ('keyup.enter' === en) {
						const pd_5 =
							_co.create(nodeValue(_v, 7).value) !== false
						ad = pd_5 && ad
					}
					return ad
				},
				null,
				null
			)),
			directiveDef(
				8,
				16384,
				null,
				0,
				DefaultValueAccessor,
				[Renderer2, ElementRef, [2, COMPOSITION_BUFFER_MODE]],
				null,
				null
			),
			providerDef(
				1024,
				null,
				NG_VALUE_ACCESSOR,
				function (p0_0) {
					return [p0_0]
				},
				[DefaultValueAccessor]
			),
			directiveDef(
				10,
				671744,
				null,
				0,
				NgModel,
				[
					[8, null],
					[8, null],
					[8, null],
					[6, NG_VALUE_ACCESSOR],
				],
				{ model: [0, 'model'] },
				{ update: 'ngModelChange' }
			),
			providerDef(2048, null, NgControl, null, [NgModel]),
			directiveDef(
				12,
				16384,
				null,
				0,
				NgControlStatus,
				[[4, NgControl]],
				null,
				null
			),
			directiveDef(
				13,
				4210688,
				null,
				0,
				AutofocusDirective,
				[ElementRef],
				{ autofocus: [0, 'autofocus'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_1)),
			directiveDef(
				17,
				16384,
				null,
				0,
				NgIf,
				[ViewContainerRef, TemplateRef],
				{ ngIf: [0, 'ngIf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(),
			anchorDef(16777216, null, null, 1, null, View_TodoComponent_5)),
			directiveDef(
				20,
				16384,
				null,
				0,
				NgIf,
				[ViewContainerRef, TemplateRef],
				{ ngIf: [0, 'ngIf'] },
				null
			),
			(_l()(), textDef(-1, null, ['\n'])),
			(_l()(), textDef(-1, null, ['\n'])),
			(_l()(),
			elementDef(
				23,
				0,
				null,
				null,
				9,
				'footer',
				[['class', 'info']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(),
			elementDef(
				25,
				0,
				null,
				null,
				1,
				'p',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['Double-click to edit a todo'])),
			(_l()(), textDef(-1, null, ['\n\t'])),
			(_l()(),
			elementDef(
				28,
				0,
				null,
				null,
				3,
				'p',
				[],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['Based on '])),
			(_l()(),
			elementDef(
				30,
				0,
				null,
				null,
				1,
				'a',
				[['href', 'http://todomvc.com']],
				null,
				null,
				null,
				null,
				null
			)),
			(_l()(), textDef(-1, null, ['TodoMVC'])),
			(_l()(), textDef(-1, null, ['\n'])),
			(_l()(), textDef(-1, null, ['\n'])),
		],
		function (_ck, _v) {
			const _co = _v.component
			const currVal_7 = _co.newTodo
			_ck(_v, 10, 0, currVal_7)
			const currVal_8 = ''
			_ck(_v, 13, 0, currVal_8)
			const currVal_9 = _co.todos.length > 0
			_ck(_v, 17, 0, currVal_9)
			const currVal_10 = _co.todos.length > 0
			_ck(_v, 20, 0, currVal_10)
		},
		function (_ck, _v) {
			const currVal_0 = nodeValue(_v, 12).ngClassUntouched
			const currVal_1 = nodeValue(_v, 12).ngClassTouched
			const currVal_2 = nodeValue(_v, 12).ngClassPristine
			const currVal_3 = nodeValue(_v, 12).ngClassDirty
			const currVal_4 = nodeValue(_v, 12).ngClassValid
			const currVal_5 = nodeValue(_v, 12).ngClassInvalid
			const currVal_6 = nodeValue(_v, 12).ngClassPending
			_ck(
				_v,
				7,
				0,
				currVal_0,
				currVal_1,
				currVal_2,
				currVal_3,
				currVal_4,
				currVal_5,
				currVal_6
			)
		}
	)
}
export function View_TodoComponent_Host_0(_l) {
	return viewDef(
		0,
		[
			(_l()(),
			elementDef(
				0,
				0,
				null,
				null,
				1,
				'app-todo',
				[],
				null,
				null,
				null,
				View_TodoComponent_0,
				RenderType_TodoComponent
			)),
			directiveDef(
				1,
				507904,
				null,
				0,
				TodoComponent,
				[TodoService, ActivatedRoute],
				null,
				null
			),
		],
		function (_ck, _v) {
			_ck(_v, 1, 0)
		},
		null
	)
}
const TodoComponentNgFactory = createComponentFactory(
	'app-todo',
	TodoComponent,
	View_TodoComponent_Host_0,
	{},
	{},
	[]
)
export { TodoComponentNgFactory }
//# sourceMappingURL=todo.component.ngfactory.js.map
